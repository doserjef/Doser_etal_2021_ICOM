model {

  # Priors ------------------------------------------------------------------
  int.psi ~ dunif(0, 1) # initial occupancy intercept
  beta.psi.0 <- logit(int.psi)
  beta.psi.1 ~ dnorm(0, 0.1) # linear elevation
  beta.psi.2 ~ dnorm(0, 0.1) # quadratic elevation
  beta.phi.1 ~ dnorm(0, 0.1) # persistence temp deviation
  beta.phi.2 ~ dnorm(0, 0.1) # persistence precip deviation
  beta.phi.3 ~ dnorm(0, 0.1) # persistence elevation
  beta.phi.4 ~ dnorm(0, 0.1) # persistence temp x elevation
  beta.phi.5 ~ dnorm(0, 0.1) # persistence ppt x elevation
  beta.gamma.1 ~ dnorm(0, 0.1) # colonization temp deviation
  beta.gamma.2 ~ dnorm(0, 0.1) # colonization precip deviation
  beta.gamma.3 ~ dnorm(0, 0.1) # elevation
  beta.gamma.4 ~ dnorm(0, 0.1) # colonization temp x elevation
  beta.gamma.5 ~ dnorm(0, 0.1) # colonization ppt x elevation
  alpha.eb.0 <- logit(int.alpha.eb) # eBird detection intercept
  int.alpha.eb ~ dunif(0, 1) # eBird detection intercept
  alpha.eb.1 ~ dnorm(0, 0.1) # observation
  alpha.eb.2 ~ dnorm(0, 0.1) # distance
  alpha.eb.3 ~ dnorm(0, 0.1) # day 
  alpha.eb.4 ~ dnorm(0, 0.1) # day^2
  alpha.eb.5 ~ dnorm(0, 0.1) # time of day
  alpha.eb.6 ~ dnorm(0, 0.1) # length of survey
  for (t in 1:n.years) {
    int.phi[t] ~ dunif(0, 1) # time-specific persistence intercept
    beta.phi.0[t] <- logit(int.phi[t])
    int.gamma[t] ~ dunif(0, 1) # time-specific colonization intercept
    beta.gamma.0[t] <- logit(int.gamma[t])
    int.alpha.hb[t] ~ dunif(0, 1) # year-specific hb det int
    alpha.hb.0[t] <- logit(int.alpha.hb[t])
  }
  alpha.hb.1 ~ dnorm(0, 0.1) # day
  alpha.hb.2 ~ dnorm(0, 0.1) # day^2
  alpha.hb.3 ~ dnorm(0, 0.1) # time of day
  for (t in 1:n.years.neon) {
    int.alpha.neon[t] ~ dunif(0, 1) # year-specific neon det int
    alpha.neon.0[t] <- logit(int.alpha.neon[t])
  }
  tau.alpha.neon.0 ~ dgamma(0.1, 0.1)
  alpha.neon.1 ~ dnorm(0, 0.1) # day
  alpha.neon.2 ~ dnorm(0, 0.1) # day^2
  alpha.neon.3 ~ dnorm(0, 0.1) # hour

  # Process Models and Likelihoods ----------------------------------------
  for (i in 1:R) {
    # Initial occupancy
    logit(psi.0[i]) <- beta.psi.0 +
                       beta.psi.1 * ELEV[i] + 
                       beta.psi.2 * pow(ELEV[i], 2)
    z[i, 1] ~ dbern(psi.0[i])
    for (t in 1:(n.years - 1)) {
      # Persistence
      logit(phi[i, t]) <- beta.phi.0[t] +
                             beta.phi.1 * TMEAN[i, t] + 
                             beta.phi.2 * PPT[i, t] + 
                             beta.phi.3 * ELEV[i] + 
                             beta.phi.4 * TMEAN[i, t] * ELEV[i] + 
                             beta.phi.5 * PPT[i, t] * ELEV[i]
      # Colonization
      logit(gamma[i, t]) <- beta.gamma.0[t] +
                               beta.gamma.1 * TMEAN[i, t] + 
                               beta.gamma.2 * PPT[i, t] + 
                               beta.gamma.3 * ELEV[i] + 
                               beta.gamma.4 * TMEAN[i, t] * ELEV[i] + 
                               beta.gamma.5 * PPT[i, t] * ELEV[i]  
      z[i, t + 1] ~ dbern(z[i, t] * phi[i, t] + (1 - z[i, t]) * gamma[i, t])
      PPT[i, t] ~ dnorm(0, 1)
      TMEAN[i, t] ~ dnorm(0, 1)
    } # t
    ELEV[i] ~ dnorm(0, 1)
  } # i

  for (t in 1:n.years) {

    # HB Data -----------------------------------------------------------
    for (i in 1:R.hb) {
      for (j in 1:J.hb) {
        logit(p.hb[i, j, t]) <- alpha.hb.0[t] +
                                    alpha.hb.1 * DAY.hb[i, j, t] + 
                                    alpha.hb.2 * DAY.hb[i, j, t]^2 + 
                                    alpha.hb.3 * TOD.hb[i, j, t] 
        C[i, j, t] ~ dbern(p.hb[i, j, t] * z[pixel.hb[i], t])
        DAY.hb[i, j, t] ~ dnorm(0, 1)
        TOD.hb[i, j, t] ~ dnorm(0, 1)
      } # j
    } # i

   # eBird Data --------------------------------------------------------
    for (l in 1:R.eb) {
      z.eb[l, t] <- ifelse(sum(z[low[l]:high[l], t]) > 0, 1, 0)
      for (j in 1:J.eb) {
        logit(p.eb[j, l, t]) <- alpha.eb.0 +
                                alpha.eb.1 * OBSV[j, l, t] +  
                                alpha.eb.2 * DIST[j, l, t] + 
                                alpha.eb.3 * DAY.eb[j, l, t] + 
                                alpha.eb.4 * DAY.eb[j, l, t]^2 + 
                                alpha.eb.5 * TIME.eb[j, l, t] + 
                                alpha.eb.6 * LENGTH[j, l, t]
        y[j, l, t] ~ dbern(p.eb[j, l, t] * z.eb[l, t]) 
        OBSV[j, l, t] ~ dnorm(0, 1)
        DIST[j, l, t] ~ dnorm(0, 1)
        DAY.eb[j, l, t] ~ dnorm(0, 1)
        TIME.eb[j, l, t] ~ dnorm(0, 1)
        LENGTH[j, l, t] ~ dnorm(0, 1) 
      } # j
    } # l
  } # t

  # NEON Data -----------------------------------------------------------
  for (t in 1:n.years.neon) {
    for (i in 1:R.neon) {
      logit(p.neon[i, t]) <- alpha.neon.0[t] +
                                alpha.neon.1 * DAY.neon[i, t] + 
                                alpha.neon.2 * DAY.neon[i, t]^2 + 
                                alpha.neon.3 * HOUR.neon[i, t]
      x[i, t] ~ dbern(p.neon[i, t] * z[pixel.neon[i], neon.years[t]])
      DAY.neon[i, t] ~ dnorm(0, 1)
      HOUR.neon[i, t] ~ dnorm(0, 1)
    } # i
  } # t
}
